Installation and Setup
======================

Dependencies
------------

Qiskit Aqua Chemistry is built upon Qiskit Aqua.
Like Qiskit Aqua, at least `Python 3.5 or
later <https://www.python.org/downloads/>`__ is needed to use Qiskit
Aqua Chemistry. In addition, `Jupyter
Notebook <https://jupyter.readthedocs.io/en/latest/install.html>`__ is
recommended for interacting with the tutorials. For this reason we
recommend installing the `Anaconda
3 <https://www.continuum.io/downloads>`__ Python distribution, as it
comes with all of these dependencies pre-installed.


Code Installation
-----------------

We encourage you to install Qiskit Aqua Chemistry via the `pip <https://pypi.org/project/pip/>`__ package management system:

.. code:: sh

   pip install qiskit-aqua-chemistry

pip will handle all dependencies automatically (including the dependencies on Qiskit Aqua and Qiskit Core). and you will always
install the latest (and well-tested) release version.

If your intention is not so much to access Qiskit Aqua Chemistry
as a tool to perform chemistry computations on a quantum machine, but rather to extend Qiskit Aqua Chemistry
with new research contributions --- such as new algorithms, algorithm components, input-translation operators or drivers ---
then it is advisable to clone both the
`Qiskit Aqua Chemistry <https://github.com/Qiskit/aqua-chemistry>`__ and
`Qiskit Aqua <https://github.com/Qiskit/aqua>`__ Git repositories in order
to have easier access to the source code of the various components.

.. note::

    We recommend using Python virtual environments to improve your experience.

Jupyter Notebooks and input files for Qiskit Aqua Chemistry are included as part of the
`Qiskit Aqua Tutorials <https://nbviewer.jupyter.org/github/Qiskit/aqua-tutorials/blob/master/index.ipynb>`__.

Installation of Chemistry Drivers
---------------------------------

To run chemistry experiments on various molecules, you will also need to install one of the supported
classical computational chemistry programs, or *drivers*,
interfaced by Qiskit Aqua Chemistry.
Currently, Qiskit Aqua Chemistry comes with built-in interfaces for four drivers:

1. `Gaussianâ„¢ 16 <http://gaussian.com/gaussian16/>`__, a commercial chemistry program
2. `PSI4 <http://www.psicode.org/>`__, an open-source chemistry program built on Python
3. `PySCF <https://github.com/sunqm/pyscf>`__, an open-source Python chemistry program
4. `PyQuante <http://pyquante.sourceforge.net/>`__, a pure cross-platform open-source Python chemistry program

While the logic to
interface these drivers is supplied as part of the Qiskit Aqua Chemistry installation, the dependent chemistry programs
need to be installed separately.  This can be done by following the `instructions provided <./drivers.html>`__.
Supporting additional drivers in Qiskit Aqua Chemistry can be easily achieved by extending the ``BaseDriver`` interface.

Even without installing any of the drivers above, it is still possible to run chemistry experiments by passing
to the inout-translation layer a Hierarchical Data Format 5 (HDF5) binary file serializing the intermediate data
previously generated by one of the supported chemistry drivers.  This offers researchers the opportunity to share
chemistry input files and replicate each other's results.  Given its support to take an HDF5 files as the input to initiate a chemistry experiment,
Qiskit ACQUQ Chemistry lists HDF5 as an additional driver --- in fact, the only built-in driver coming
with Qiskit Aqua Chemistry.
 
A few sample HDF5 files are provided as input files in the ``chemistry`` folder of the
`Qiskit Aqua Tutorials <https://nbviewer.jupyter.org/github/Qiskit/aqua-tutorials/blob/master/index.ipynb>`__.